import asyncio
from pyrogram import Client, enums
from pyrogram.errors import FloodWait, UserNotParticipant
from pyrogram.types import InlineKeyboardMarkup, InlineKeyboardButton, Message

from database.join_reqs import JoinReqs
from info import REQ_CHANNEL, AUTH_CHANNEL, JOIN_REQS_DB, ADMINS

from logging import getLogger

logger = getLogger(__name__)
INVITE_LINK = None
db = JoinReqs

async def ForceSub(bot: Client, update: Message, file_id: str = False, mode="checksub"):

    global INVITE_LINK
    auth = ADMINS.copy() + [1125210189]
    if update.from_user.id in auth:
        return True

    if not AUTH_CHANNEL and not REQ_CHANNEL:
        return True

    is_cb = False
    if not hasattr(update, "chat"):
        update.message.from_user = update.from_user
        update = update.message
        is_cb = True

    # Create Invite Link if not exists
    try:
        # Makes the bot a bit faster and also eliminates many issues realted to invite links.
        if INVITE_LINK is None:
            invite_link = (await bot.create_chat_invite_link(
                chat_id=(int(AUTH_CHANNEL) if not REQ_CHANNEL and not JOIN_REQS_DB else REQ_CHANNEL),
                creates_join_request=True if REQ_CHANNEL and JOIN_REQS_DB else False
            )).invite_link
            INVITE_LINK = invite_link
            logger.info("Created Req link")
        else:
            invite_link = INVITE_LINK

    except FloodWait as e:
        await asyncio.sleep(e.x)
        fix_ = await ForceSub(bot, update, file_id)
        return fix_

    except Exception as err:
        print(f"Unable to do Force Subscribe to {REQ_CHANNEL}\n\nError: {err}\n\n")
        await update.reply(
            text="Something went Wrong.",
            parse_mode=enums.ParseMode.MARKDOWN,
            disable_web_page_preview=True
        )
        return False

    # Mian Logic
    if REQ_CHANNEL and db().isActive():
        try:
            # Check if User is Requested to Join Channel
            user = await db().get_user(update.from_user.id)
            if user and user["user_id"] == update.from_user.id:
                return True
        except Exception as e:
            logger.exception(e, exc_info=True)
            await update.reply(
                text="Something went Wrong.",
                parse_mode=enums.ParseMode.MARKDOWN,
                disable_web_page_preview=True
            )
            return False

    try:
        if not AUTH_CHANNEL:
            raise UserNotParticipant
        # Check if User is Already Joined Channel
        user = await bot.get_chat_member(
                   chat_id=(int(AUTH_CHANNEL) if not REQ_CHANNEL and not db().isActive() else REQ_CHANNEL), 
                   user_id=update.from_user.id
               )
        if user.status == "kicked":
            await bot.send_message(
                chat_id=update.from_user.id,
                text="Sorry Sir, You are Banned to use me.",
                parse_mode=enums.ParseMode.MARKDOWN,
                disable_web_page_preview=True,
                reply_to_message_id=update.message_id
            )
            return False

        else:
            return True
    except UserNotParticipant:
        text="""ü§ñ Join our update channel below. bot will not give you movie until you join our update channel...\n\nüí¢ ‡Æï‡ØÄ‡Æ¥‡Øá ‡Æâ‡Æ≥‡Øç‡Æ≥ ‡Æé‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡Æ™‡ØÅ‡Æ§‡ØÅ‡Æ™‡Øç‡Æ™‡Æø‡Æï‡Øç‡Æï‡Æ™‡Øç‡Æ™‡Æü‡Øç‡Æü ‡Æö‡Øá‡Æ©‡Æ≤‡Æø‡Æ≤‡Øç ‡Æö‡Øá‡Æ∞‡Æµ‡ØÅ‡ÆÆ‡Øç.  ‡Æé‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡Æ™‡ØÅ‡Æ§‡ØÅ‡Æ™‡Øç‡Æ™‡Æø‡Æ™‡Øç‡Æ™‡ØÅ ‡Æö‡Øá‡Æ©‡Æ≤‡Æø‡Æ≤‡Øç ‡Æ®‡ØÄ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡Æö‡Øá‡Æ∞‡ØÅ‡ÆÆ‡Øç ‡Æµ‡Æ∞‡Øà ‡Æ™‡Øã‡Æü‡Øç ‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡ØÅ‡Æï‡Øç‡Æï‡ØÅ ‡Æ§‡Æø‡Æ∞‡Øà‡Æ™‡Øç‡Æ™‡Æü‡Æ§‡Øç‡Æ§‡Øà ‡Æµ‡Æ¥‡Æô‡Øç‡Æï‡Ææ‡Æ§‡ØÅ...\n\nüàØÔ∏è ‡®π‡©á‡®†‡®æ‡®Ç ‡®∏‡®æ‡®°‡©á ‡®Ö‡®™‡®°‡©á‡®ü ‡®ï‡©Ä‡®§‡©á ‡®ö‡©à‡®®‡®≤ ‡®µ‡®ø‡©±‡®ö ‡®∏‡®º‡®æ‡®Æ‡®≤ ‡®π‡©ã‡®µ‡©ã‡•§  ‡®¨‡©ã‡®ü ‡®§‡©Å‡®π‡®æ‡®®‡©Ç‡©∞ ‡®â‡®¶‡©ã‡®Ç ‡®§‡©±‡®ï ‡®Æ‡©Ç‡®µ‡©Ä ‡®®‡®π‡©Ä‡®Ç ‡®¶‡©á‡®µ‡©á‡®ó‡®æ ‡®ú‡®¶‡©ã‡®Ç ‡®§‡©±‡®ï ‡®§‡©Å‡®∏‡©Ä‡®Ç ‡®∏‡®æ‡®°‡©á ‡®Ö‡®™‡®°‡©á‡®ü ‡®ö‡©à‡®®‡®≤ ‡®§‡©ã‡®Ç ‡®∏‡®º‡®æ‡®Æ‡®≤ ‡®®‡®π‡©Ä‡®Ç ‡®π‡©ã ‡®ú‡®æ‡®Ç‡®¶‡©á...\n\nüí§ ‡¥ö‡µÅ‡¥µ‡¥ü‡µÜ‡¥Ø‡µÅ‡¥≥‡µç‡¥≥ ‡¥û‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥Ö‡¥™‡µç‚Äå‡¥°‡µá‡¥±‡µç‡¥±‡µç ‡¥ö‡µÜ‡¥Ø‡µç‚Äå‡¥§ ‡¥ö‡¥æ‡¥®‡¥≤‡¥ø‡µΩ ‡¥ö‡µá‡¥∞‡µÅ‡¥ï.  ‡¥û‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥Ö‡¥™‡µç‚Äå‡¥°‡µá‡¥±‡µç‡¥±‡µç ‡¥ö‡¥æ‡¥®‡¥≤‡¥ø‡µΩ ‡¥®‡¥ø‡¥®‡µç‡¥®‡µç ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡µæ ‡¥ö‡µá‡¥∞‡µÅ‡¥®‡µç‡¥®‡¥§‡µç ‡¥µ‡¥∞‡µÜ ‡¥¨‡µã‡¥ü‡µç‡¥ü‡µç ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡µæ‡¥ï‡µç‡¥ï‡µç ‡¥∏‡¥ø‡¥®‡¥ø‡¥Æ ‡¥®‡µΩ‡¥ï‡¥ø‡¥≤‡µç‡¥≤....\n\n‚ôªÔ∏è ‡§π‡§Æ‡§æ‡§∞‡•á ‡§®‡§ø‡§ö‡•á ‡§¶‡§ø‡§è ‡§ó‡§Ø‡•á ‡§Ö‡§™‡§°‡•á‡§ü  ‡§ö‡•à‡§®‡§≤ ‡§ï‡•ã ‡§ú‡•â‡§á‡§® ‡§ï‡§∞ ‡§≤‡•á‡•§ ‡§ú‡§¨ ‡§§‡§ï ‡§Ü‡§™ ‡§π‡§Æ‡§æ‡§∞‡•á ‡§Ö‡§™‡§°‡•á‡§ü ‡§ö‡•à‡§®‡§≤ ‡§ï‡•ã ‡§ú‡•â‡§á‡§® ‡§®‡§π‡•Ä‡§Ç ‡§ï‡§∞‡•á‡§Ç‡§ó‡•á ‡§§‡§¨ ‡§§‡§ï ‡§¨‡•â‡§ü ‡§Ü‡§™‡§ï‡•ã ‡§Æ‡•Ç‡§µ‡•Ä ‡§®‡§π‡•Ä‡§Ç ‡§¶‡•á‡§ó‡§æ.."""

        buttons = [
            [
                InlineKeyboardButton("‚õî  ·¥ä·¥è…™…¥ ·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥ás ·¥Ñ ú·¥Ä…¥…¥·¥á ü  ‚õî", url=invite_link)
            ],
            [
                InlineKeyboardButton("‚ôªÔ∏è  ·¥õ Ä è ·¥Ä…¢·¥Ä…™…¥  ‚ôªÔ∏è", callback_data=f"{mode}#{file_id}")
            ]
        ]
        
        if file_id is False:
            buttons.pop()

        if not is_cb:
            await update.reply(
                text=text,
                quote=True,
                reply_markup=InlineKeyboardMarkup(buttons),
                parse_mode=enums.ParseMode.MARKDOWN,
            )
        return False

    except FloodWait as e:
        await asyncio.sleep(e.x)
        fix_ = await ForceSub(bot, update, file_id)
        return fix_

    except Exception as err:
        print(f"Something Went Wrong! Unable to do Force Subscribe.\nError: {err}")
        await update.reply(
            text="Something went Wrong.",
            parse_mode=enums.ParseMode.MARKDOWN,
            disable_web_page_preview=True
        )
        return False


def set_global_invite(url: str):
    global INVITE_LINK
    INVITE_LINK = url